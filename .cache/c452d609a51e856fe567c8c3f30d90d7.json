{"dependencies":[{"name":"/Users/willemolding/repos/panoptipong/node_modules/tape/package.json","includedInParent":true,"mtime":1529950349322},{"name":"/Users/willemolding/repos/panoptipong/package.json","includedInParent":true,"mtime":1529952454752},{"name":"/Users/willemolding/repos/panoptipong/.babelrc","includedInParent":true,"mtime":1529950097751},{"name":"defined","loc":{"line":1,"column":22},"parent":"/Users/willemolding/repos/panoptipong/node_modules/tape/lib/results.js","resolved":"/Users/willemolding/repos/panoptipong/node_modules/defined/index.js"},{"name":"events","loc":{"line":2,"column":27},"parent":"/Users/willemolding/repos/panoptipong/node_modules/tape/lib/results.js","resolved":"/Users/willemolding/repos/panoptipong/node_modules/events/events.js"},{"name":"inherits","loc":{"line":3,"column":23},"parent":"/Users/willemolding/repos/panoptipong/node_modules/tape/lib/results.js","resolved":"/Users/willemolding/repos/panoptipong/node_modules/inherits/inherits_browser.js"},{"name":"through","loc":{"line":4,"column":22},"parent":"/Users/willemolding/repos/panoptipong/node_modules/tape/lib/results.js","resolved":"/Users/willemolding/repos/panoptipong/node_modules/through/index.js"},{"name":"resumer","loc":{"line":5,"column":22},"parent":"/Users/willemolding/repos/panoptipong/node_modules/tape/lib/results.js","resolved":"/Users/willemolding/repos/panoptipong/node_modules/resumer/index.js"},{"name":"object-inspect","loc":{"line":6,"column":22},"parent":"/Users/willemolding/repos/panoptipong/node_modules/tape/lib/results.js","resolved":"/Users/willemolding/repos/panoptipong/node_modules/object-inspect/index.js"},{"name":"function-bind","loc":{"line":7,"column":19},"parent":"/Users/willemolding/repos/panoptipong/node_modules/tape/lib/results.js","resolved":"/Users/willemolding/repos/panoptipong/node_modules/function-bind/index.js"},{"name":"has","loc":{"line":8,"column":18},"parent":"/Users/willemolding/repos/panoptipong/node_modules/tape/lib/results.js","resolved":"/Users/willemolding/repos/panoptipong/node_modules/has/src/index.js"},{"name":"process","parent":"/Users/willemolding/repos/panoptipong/node_modules/tape/lib/results.js","resolved":"/Users/willemolding/repos/panoptipong/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\nvar defined = require('defined');\nvar EventEmitter = require('events').EventEmitter;\nvar inherits = require('inherits');\nvar through = require('through');\nvar resumer = require('resumer');\nvar inspect = require('object-inspect');\nvar bind = require('function-bind');\nvar has = require('has');\nvar regexpTest = bind.call(Function.call, RegExp.prototype.test);\nvar yamlIndicators = /\\:|\\-|\\?/;\nvar nextTick = typeof setImmediate !== 'undefined'\n    ? setImmediate\n    : process.nextTick\n;\n\nmodule.exports = Results;\ninherits(Results, EventEmitter);\n\nfunction Results () {\n    if (!(this instanceof Results)) return new Results;\n    this.count = 0;\n    this.fail = 0;\n    this.pass = 0;\n    this._stream = through();\n    this.tests = [];\n    this._only = null;\n}\n\nResults.prototype.createStream = function (opts) {\n    if (!opts) opts = {};\n    var self = this;\n    var output, testId = 0;\n    if (opts.objectMode) {\n        output = through();\n        self.on('_push', function ontest (t, extra) {\n            if (!extra) extra = {};\n            var id = testId++;\n            t.once('prerun', function () {\n                var row = {\n                    type: 'test',\n                    name: t.name,\n                    id: id\n                };\n                if (has(extra, 'parent')) {\n                    row.parent = extra.parent;\n                }\n                output.queue(row);\n            });\n            t.on('test', function (st) {\n                ontest(st, { parent: id });\n            });\n            t.on('result', function (res) {\n                res.test = id;\n                res.type = 'assert';\n                output.queue(res);\n            });\n            t.on('end', function () {\n                output.queue({ type: 'end', test: id });\n            });\n        });\n        self.on('done', function () { output.queue(null) });\n    } else {\n        output = resumer();\n        output.queue('TAP version 13\\n');\n        self._stream.pipe(output);\n    }\n\n    nextTick(function next() {\n        var t;\n        while (t = getNextTest(self)) {\n            t.run();\n            if (!t.ended) return t.once('end', function(){ nextTick(next); });\n        }\n        self.emit('done');\n    });\n\n    return output;\n};\n\nResults.prototype.push = function (t) {\n    var self = this;\n    self.tests.push(t);\n    self._watch(t);\n    self.emit('_push', t);\n};\n\nResults.prototype.only = function (t) {\n    this._only = t;\n};\n\nResults.prototype._watch = function (t) {\n    var self = this;\n    var write = function (s) { self._stream.queue(s) };\n    t.once('prerun', function () {\n        write('# ' + t.name + '\\n');\n    });\n\n    t.on('result', function (res) {\n        if (typeof res === 'string') {\n            write('# ' + res + '\\n');\n            return;\n        }\n        write(encodeResult(res, self.count + 1));\n        self.count ++;\n\n        if (res.ok) self.pass ++\n        else {\n            self.fail ++;\n            self.emit('fail');\n        }\n    });\n\n    t.on('test', function (st) { self._watch(st) });\n};\n\nResults.prototype.close = function () {\n    var self = this;\n    if (self.closed) self._stream.emit('error', new Error('ALREADY CLOSED'));\n    self.closed = true;\n    var write = function (s) { self._stream.queue(s) };\n\n    write('\\n1..' + self.count + '\\n');\n    write('# tests ' + self.count + '\\n');\n    write('# pass  ' + self.pass + '\\n');\n    if (self.fail) write('# fail  ' + self.fail + '\\n')\n    else write('\\n# ok\\n')\n\n    self._stream.queue(null);\n};\n\nfunction encodeResult (res, count) {\n    var output = '';\n    output += (res.ok ? 'ok ' : 'not ok ') + count;\n    output += res.name ? ' ' + res.name.toString().replace(/\\s+/g, ' ') : '';\n\n    if (res.skip) output += ' # SKIP';\n    else if (res.todo) output += ' # TODO';\n\n    output += '\\n';\n    if (res.ok) return output;\n\n    var outer = '  ';\n    var inner = outer + '  ';\n    output += outer + '---\\n';\n    output += inner + 'operator: ' + res.operator + '\\n';\n\n    if (has(res, 'expected') || has(res, 'actual')) {\n        var ex = inspect(res.expected, {depth: res.objectPrintDepth});\n        var ac = inspect(res.actual, {depth: res.objectPrintDepth});\n\n        if (Math.max(ex.length, ac.length) > 65 || invalidYaml(ex) || invalidYaml(ac)) {\n            output += inner + 'expected: |-\\n' + inner + '  ' + ex + '\\n';\n            output += inner + 'actual: |-\\n' + inner + '  ' + ac + '\\n';\n        } else {\n            output += inner + 'expected: ' + ex + '\\n';\n            output += inner + 'actual:   ' + ac + '\\n';\n        }\n    }\n    if (res.at) {\n        output += inner + 'at: ' + res.at + '\\n';\n    }\n\n    var actualStack = res.actual && (typeof res.actual === 'object' || typeof res.actual === 'function') ? res.actual.stack : undefined;\n    var errorStack = res.error && res.error.stack;\n    var stack = defined(actualStack, errorStack);\n    if (stack) {\n        var lines = String(stack).split('\\n');\n        output += inner + 'stack: |-\\n';\n        for (var i = 0; i < lines.length; i++) {\n            output += inner + '  ' + lines[i] + '\\n';\n        }\n    }\n\n    output += outer + '...\\n';\n    return output;\n}\n\nfunction getNextTest (results) {\n    if (!results._only) {\n        return results.tests.shift();\n    }\n\n    do {\n        var t = results.tests.shift();\n        if (!t) continue;\n        if (results._only === t) {\n            return t;\n        }\n    } while (results.tests.length !== 0)\n}\n\nfunction invalidYaml (str) {\n    return regexpTest(yamlIndicators, str);\n}\n","map":null},"hash":"612e01edad5bf6c86612956721e66511","cacheData":{"env":{}},"id":199}